{"version":3,"sources":["shared/Event.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Meta","Card","Event","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","react_default","a","createElement","card","cover","alt","src","actions","icon","type","title","TITLE","description","DESCRIPTION","EVENT_DATETIME","LOCATION","IS_PUBLIC","PRICE","MAX_ATTENDING","Component","Search","Input","Header","Layout","Content","Home","Footer","visible","events","e","_this2","preventDefault","form","validateFields","err","values","axios","post","then","setState","catch","console","log","text","_this3","get","params","search","_ref","getFieldDecorator","style","margin","layout","background","padding","display","flexDirection","justifyContent","placeholder","onSearch","bind","es_button","onClick","showModal","row","gutter","map","item","i","col","marginTop","lg","md","xs","Event_Event","key","modal","maskClosable","onOk","handleOk","onCancel","handleCancel","es_form","Item","rules","required","message","input","TextArea","date_picker","width","format","showTime","label","es_checkbox","Form","create","name","App","pages_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mWAEQA,EAASC,IAATD,KACaE,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAM,GAFIP,wEAMX,IACGQ,EAAQL,KAAKJ,MAAbS,KACP,OAAGA,EAEKC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,MAAOJ,EAAAC,EAAAC,cAAA,OAAKG,IAAI,UAAUC,IAAI,wEAC9BC,QAAS,CAACP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,YAAcT,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,SAAWT,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,eAEpET,EAAAC,EAAAC,cAACf,EAAD,CACIuB,MAAOX,EAAKY,MACZC,YAAab,EAAKc,cAEtBb,EAAAC,EAAAC,cAAA,mBACUH,EAAKe,gBAEfd,EAAAC,EAAAC,cAAA,wBACeH,EAAKgB,UAEpBf,EAAAC,EAAAC,cAAA,sBACaH,EAAKiB,UAAY,MAAM,MAEpChB,EAAAC,EAAAC,cAAA,qBACYH,EAAKkB,OAEjBjB,EAAAC,EAAAC,cAAA,6BACoBH,EAAKmB,gBAK1B,YArCgBC,aCC7BC,EAASC,IAAMD,OACdE,EAAyBC,IAAzBD,OAAOE,EAAkBD,IAAlBC,QAEPC,GAFyBF,IAAVG,mBAGlB,SAAAD,EAAYnC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,IACflC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,KAAAH,KAAMJ,KACDQ,MAAM,CACP6B,SAAQ,EACRC,OAAO,IAJIrC,wEAOVsC,GAAE,IAAAC,EAAApC,KACPmC,EAAEE,iBACFrC,KAAKJ,MAAM0C,KAAKC,eAAe,SAACC,EAAKC,GAC5BD,GACDE,IAAMC,KAAK,cAAcF,GAAQG,KAAK,SAACvC,GACnC+B,EAAKS,SAAS,CAACZ,SAAQ,MACxBa,MAAM,SAACN,GACLO,QAAQC,IAAIR,8CAMzBxC,KAAK6C,SAAS,CAACZ,SAAQ,wCAGvBjC,KAAK6C,SAAS,CAACZ,SAAQ,qCAElBgB,GAAK,IAAAC,EAAAlD,KACV0C,IAAMS,IAAI,cAAc,CAACC,OAAO,CAACC,OAAOJ,KAAQL,KAAK,SAAAU,GAAU,IAARjD,EAAQiD,EAARjD,KAC/C6C,EAAKL,SAAS,CAACX,OAAO7B,MAE3ByC,MAAM,SAACN,GACNO,QAAQC,IAAIR,sCAGX,IACGe,EAAsBvD,KAAKJ,MAAM0C,KAAjCiB,kBACDrB,EAAUlC,KAAKI,MAAf8B,OACP,OAEI5B,EAAAC,EAAAC,cAAA,OAAKgD,MAAO,CAACC,OAAO,KAChBnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACApD,EAAAC,EAAAC,cAACoB,EAAD,CAAQ4B,MAAO,CAACG,WAAY,OAAQC,QAAS,IACzCtD,EAAAC,EAAAC,cAAA,OAAKgD,MAAO,CAACK,QAAQ,OAAOC,cAAc,MAAMC,eAAe,kBAC/DzD,EAAAC,EAAAC,cAACkB,EAAD,CACIsC,YAAY,oBACZC,SAAUjE,KAAKiE,SAASC,KAAKlE,QAEjCM,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAQC,QAASpE,KAAKqE,UAAUH,KAAKlE,OAArC,SAKAM,EAAAC,EAAAC,cAACsB,EAAD,KACIxB,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAKC,OAAQ,IACRrC,EAAOsC,IAAI,SAACC,EAAKC,GAEd,OAAQpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAKnB,MAAO,CAACoB,UAAU,IAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAA9C,KAAoDzE,EAAAC,EAAAC,cAACwE,EAAD,CAAO3E,KAAMoE,EAAMQ,IAAKP,OAExFpE,EAAAC,EAAAC,cAACwE,EAAD,SAKZ1E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CACIC,cAAc,EACdnE,MAAM,YACNiB,QAASjC,KAAKI,MAAM6B,QACpBmD,KAAMpF,KAAKqF,SAASnB,KAAKlE,MACzBsF,SAAUtF,KAAKuF,aAAarB,KAAKlE,OAEjCM,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACIlF,EAAAC,EAAAC,cAACgF,EAAA,EAAKC,KAAN,KACKlC,EAAkB,aAAc,CAC7BmC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+BADtCrC,CAGGjD,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAQ7B,YAAY,YAG5B1D,EAAAC,EAAAC,cAACgF,EAAA,EAAKC,KAAN,KACKlC,EAAkB,cAAe,CAC9BmC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qCADtCrC,CAGGjD,EAAAC,EAAAC,cAACqF,EAAA,EAAMC,SAAP,CAAiB9B,YAAY,kBAGrC1D,EAAAC,EAAAC,cAACgF,EAAA,EAAKC,KAAN,KACKlC,EAAkB,WAAY,CAC3BmC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,mCADtCrC,CAGGjD,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAYvC,MAAO,CAACwC,MAAM,QAASC,OAAQ,qBAAsBC,SAAU,CAACD,OAAO,aAG3F3F,EAAAC,EAAAC,cAACgF,EAAA,EAAKC,KAAN,KACKlC,EAAkB,WAAY,CAC3BmC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,2BADtCrC,CAGGjD,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAQ7B,YAAY,eAG5B1D,EAAAC,EAAAC,cAACgF,EAAA,EAAKC,KAAN,KACKlC,EAAkB,WAAY,CAC3BmC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,2BADtCrC,CAGGjD,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAQ7B,YAAY,eAG5B1D,EAAAC,EAAAC,cAACgF,EAAA,EAAKC,KAAN,KACKlC,EAAkB,QAAS,CACxBmC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,8BADtCrC,CAGGjD,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAQ7B,YAAY,QAASjD,KAAM,aAG3CT,EAAAC,EAAAC,cAACgF,EAAA,EAAKC,KAAN,KACKlC,EAAkB,eAAgB,CAC/BmC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,2CADtCrC,CAGGjD,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAQ7B,YAAY,0BAA0BjD,KAAM,aAG5DT,EAAAC,EAAAC,cAACgF,EAAA,EAAKC,KAAN,CACIU,MAAO,qBAEN5C,EAAkB,WAAY,GAA9BA,CAGGjD,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,kBA9HZ3E,cA0IJ4E,MAAKC,OAAO,CAAEC,KAAM,YAApBF,CAAkCtE,GCnInCyE,2LATX,OACIlG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiG,EAAD,cAJQhF,cCSEiF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1G,EAAAC,EAAAC,cAACyG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1E,KAAK,SAAA2E,GACjCA,EAAaC","file":"static/js/main.9f35e512.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport { Card, Icon, Avatar } from 'antd';\nconst { Meta } = Card;\nexport default class Event extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n\n        }\n    }\n    render(){\n        const {data} = this.props;\n        if(data){\n            return (\n                <Card\n                    cover={<img alt=\"example\" src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\" />}\n                    actions={[<Icon type=\"setting\" />, <Icon type=\"edit\" />, <Icon type=\"ellipsis\" />]}\n                >\n                    <Meta\n                        title={data.TITLE}\n                        description={data.DESCRIPTION}\n                    />\n                    <div>\n                        Date:{data.EVENT_DATETIME}\n                    </div>\n                    <div>\n                        Location: {data.LOCATION}\n                    </div>\n                    <div>\n                        Public: {data.IS_PUBLIC ? 'YES':'NO'}\n                    </div>\n                    <div>\n                        Price: {data.PRICE}\n                    </div>\n                    <div>\n                        Max Attendees: {data.MAX_ATTENDING}\n                    </div>\n                </Card>\n            )\n        }else {\n            return null\n        }\n        }\n\n\n}","import React,{Component} from 'react';\nimport {Input,Layout,Button,Modal,Form,Row,Col,DatePicker,Checkbox} from 'antd';\nimport axios  from 'axios';\nimport Event from '../shared/Event'\nconst Search = Input.Search;\nconst {Header,Content,Footer} = Layout;\n\n class Home extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            visible:false,\n            events:[]\n        }\n    }\n    handleOk(e){\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                axios.post('/api/insert',values).then((data)=>{\n                    this.setState({visible:false})\n                }).catch((err)=>{\n                     console.log(err)\n                })\n            }\n        });\n    }\n    handleCancel(){\n        this.setState({visible:false})\n    }\n    showModal(){\n        this.setState({visible:true})\n    }\n    onSearch(text){\n        axios.get('/api/search',{params:{search:text}}).then(({data})=>{\n                this.setState({events:data})\n\n        }).catch((err)=>{\n            console.log(err)\n        })\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const {events} = this.state;\n        return (\n\n            <div style={{margin:20}}>\n                <Layout >\n                <Header style={{background: '#fff', padding: 0}}>\n                    <div style={{display:'flex',flexDirection:'row',justifyContent:'space-between'}}>\n                    <Search\n                        placeholder=\"Input search text\"\n                        onSearch={this.onSearch.bind(this)}\n                    />\n                    <Button onClick={this.showModal.bind(this)}>\n                        New\n                    </Button>\n                    </div>\n                </Header>\n                    <Content>\n                        <Row gutter={16}>\n                            {events.map((item,i)=>{\n\n                                return  <Col style={{marginTop:20}} lg={6} md={8} xs={12}>  <Event data={item} key={i}/></Col>\n                            })}\n                            <Event/>\n                        </Row>\n                    </Content>\n                </Layout>\n\n                <Modal\n                    maskClosable={false}\n                    title=\"New Event\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                >\n                    <Form>\n                        <Form.Item>\n                            {getFieldDecorator('eventTitle', {\n                                rules: [{ required: true, message: 'Please enter event title!' }],\n                            })(\n                                <Input  placeholder=\"Title\" />\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('description', {\n                                rules: [{ required: true, message: 'Please enter event description!' }],\n                            })(\n                                <Input.TextArea  placeholder=\"Description\"/>\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('dateTime', {\n                                rules: [{ required: true, message: 'Please enter event date time!' }],\n                            })(\n                                <DatePicker style={{width:'100%'}} format={'MM/DD/YYYY hh:mm a'} showTime={{format:'hh:mm'}}/>\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('location', {\n                                rules: [{ required: true, message: 'Please enter location' }],\n                            })(\n                                <Input  placeholder=\"location\" />\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('duration', {\n                                rules: [{ required: true, message: 'Please enter duration' }],\n                            })(\n                                <Input  placeholder=\"Duration\" />\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('price', {\n                                rules: [{ required: true, message: 'Please enter event price' }],\n                            })(\n                                <Input  placeholder=\"price\"  type={'number'}/>\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('maxAttending', {\n                                rules: [{ required: true, message: 'Please enter the max attendees number' }],\n                            })(\n                                <Input  placeholder=\"Max number of attendees\" type={'number'} />\n                            )}\n                        </Form.Item>\n                        <Form.Item\n                            label={'Is public event? '}\n                        >\n                            {getFieldDecorator('isPublic', {\n\n                            })(\n                                <Checkbox />\n                            )}\n\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n\n}\n\nexport default  Form.create({ name: 'newEvent' })(Home)","import React, { Component } from 'react';\nimport Home from './pages/Home';\nimport \"antd/dist/antd.css\";\nclass App extends Component {\n  render() {\n    return (\n        <div>\n          <Home/>\n        </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}